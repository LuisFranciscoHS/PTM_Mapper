g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25) + ylim(0, 0.4) +xlim(0,10) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25) + ylim(0, 0.4) +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25) + ylim(0, 0.4) +xlim(0,25) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25) + ylim(0, 0.3) +xlim(0,25) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25) + ylim(0, 0.25) +xlim(0,25) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25) + ylim(0, 0.10) +xlim(0,25) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25)  +xlim(0,50) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Reactions, fill = Type, colo
ggplot(frequencies, aes(Reactions, fill = Type, colour = Type)) +
geom_density(alpha = 0.2, adjust = 1.5) + ylim(0, 0.4) + xlim(0, 10) + ggtitle("Mapped reactions per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 4)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Reactions, fill = Type, colour = Type)) +
geom_density(alpha = 0.2, adjust = 1.5) + ylim(0, 0.4) + xlim(0, 10) + ggtitle("Mapped reactions per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Reactions, fill = Type, colour = Type)) +
geom_density(alpha = 0.2, adjust = 1.5) + ylim(0, 0.4) + ggtitle("Mapped reactions per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Reactions, fill = Type, colour = Type)) +
geom_density(alpha = 0.2, adjust = 1.5) + ylim(0, 0.4) + xlim(0, 20) + ggtitle("Mapped reactions per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Reactions, fill = Type, colour = Type)) +
geom_density(alpha = 0.2, adjust = 1.5) + ylim(0, 0.4) + xlim(0, 10) + ggtitle("Mapped reactions per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + labs(title="Mapped pathways per type of entity") + xlim(0, 30) + theme_bw() + scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + labs(title="Mapped pathways per type of entity") + xlim(0, 20) + theme_bw() + scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Reactions)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge") +  # change binwidth
labs(title="Mapped reactions per type of entity") + xlim(0, 10)+ theme_bw() + scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
p <- ggplot(frequencies, aes(Type, Pathways))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 15) + theme_bw() + scale_fill_manual(values=fillColors)
p <- ggplot(frequencies, aes(Type, Pathways))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 30) + theme_bw() + scale_fill_manual(values=fillColors)
p <- ggplot(frequencies, aes(Type, Pathways))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 20) + theme_bw() + scale_fill_manual(values=fillColors)
p <- ggplot(frequencies, aes(Type, Reactions))
p + geom_violin(aes(fill = Type), adjust = 0.7) + ylim(0, 30) + theme_bw() + scale_fill_manual(values=fillColors)
proteoformFrequencies <- read.csv("ReactomeAllProteoformsFrequencies.csv", sep = ",", header = T)
proteinFrequencies <- read.csv("ReactomeAllProteinFrequencies.csv", sep = ",", header = T)
modifiedProteinProteoformFrequencies <- read.csv("ReactomeModifiedProteinProteoformsFrequencies.csv", sep = ",", header = T)
modifiedProteinFrequencies <- read.csv("ReactomeModifiedProteinFrequencies.csv", sep = ",", header = T)
nonEmptyProteoformFrequencies <- read.csv("ReactomeNonEmptyProteoformsFrequencies.csv", sep = ",", header = T)
nonEmptyProteinFrequencies <- read.csv("ReactomeNonEmptyProteinsFrequencies.csv", sep = ",", header = T)
frequencies <- rbind(proteoformFrequencies[,c(1,2,4,5)], proteinFrequencies)
frequencies <- rbind(modifiedProteinFrequencies[,c(1,2,4,5)], frequencies)
frequencies <- rbind(modifiedProteinProteoformFrequencies[,c(1,2,4,5)], frequencies)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
fillColors <- c("#fc9272", "#a1d99b", "#fec44f", "#bdbdbd")
borderColors <- c("#de2d26","#31a354","#d95f0e", "#636363")
library(ggplot2)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
frequencies$Type <- as.character(frequencies$Type)
frequencies$Type <- factor(frequencies$Type, levels = c("Protein","Proteoform","Modified Protein", "Modified Protein Proteoform"))
fillColors <- c("#fc9272", "#a1d99b", "#fec44f", "#a6bddb")
borderColors <- c("#de2d26","#31a354","#d95f0e", "#2b8cbe")
library(ggplot2)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
fillColors <- c("#fc9272", "#fec44f", "#a1d99b","#a6bddb")
borderColors <- c("#de2d26","#d95f0e","#31a354", "#2b8cbe")
library(ggplot2)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25)  +xlim(0,50) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
fillColors <- c("#de2d26", "#d95f0e", "#31a354","#2b8cbe")
borderColors <- c("#de2d26","#d95f0e","#31a354", "#2b8cbe")
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.4, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.1, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.9, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.6, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
fillColors <- c("#fc9272", "#ffeda0", "#a1d99b","#a6bddb")
borderColors <- c("#de2d26","#feb24c","#31a354", "#2b8cbe")
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.6, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.8, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
fillColors <- c( "#ffeda0","#fc9272", "#a1d99b","#a6bddb")
borderColors <- c("#feb24c","#de2d26","#31a354", "#2b8cbe")
library(ggplot2)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.8, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
frequencies$Type <- factor(frequencies$Type, levels = c("Proteoform","Protein","Modified Protein Proteoform","Modified Protein"))
fillColors <- c( "#ffeda0","#fc9272", "#a1d99b","#a6bddb")
borderColors <- c("#feb24c","#de2d26","#31a354", "#2b8cbe")
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.8, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Reactions, fill = Type, colour = Type)) +
geom_density(alpha = 0.2, adjust = 1.5) + ylim(0, 0.4) + xlim(0, 10) + ggtitle("Mapped reactions per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Reactions, fill = Type, colour = Type)) +
geom_density(alpha = 0.8, adjust = 1.5) + ylim(0, 0.4) + xlim(0, 10) + ggtitle("Mapped reactions per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Reactions, fill = Type, colour = Type)) +
geom_density(alpha = 0.7, adjust = 1.5) + ylim(0, 0.4) + xlim(0, 10) + ggtitle("Mapped reactions per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.7, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Reactions, fill = Type, colour = Type)) +
geom_density(alpha = 0.7, adjust = 1.5) + ylim(0, 0.4) + xlim(0, 10) + ggtitle("Mapped reactions per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + labs(title="Mapped pathways per type of entity") + xlim(0, 20) + theme_bw() + scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Reactions)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge") +  # change binwidth
labs(title="Mapped reactions per type of entity") + xlim(0, 10)+ theme_bw() + scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
p <- ggplot(frequencies, aes(Type, Pathways))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 20) + theme_bw() + scale_fill_manual(values=fillColors) + labs(title="Mapped pathways per type of entity")
p <- ggplot(frequencies, aes(Type, Pathways))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 20) + theme_bw() + scale_fill_manual(values=borderColors) + labs(title="Mapped pathways per type of entity")
p <- ggplot(frequencies, aes(Type, Reactions))
p + geom_violin(aes(fill = Type), adjust = 0.7) + ylim(0, 30) + theme_bw() + scale_fill_manual(values=borderColors) + labs(title="Mapped reactions per type of entity")
g <- ggplot(frequencies, aes(Reactions)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge") +  # change binwidth
labs(title="Mapped reactions per type of entity") + xlim(0, 10)+ theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + labs(title="Mapped pathways per type of entity") + xlim(0, 20) + theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + labs(title="Mapped pathways per type of entity") + xlim(0, 20) + theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Reactions)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge") +  # change binwidth
labs(title="Mapped reactions per type of entity") + xlim(0, 10)+ theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + labs(title="Mapped pathways per type of entity") + xlim(0, 20) + theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(alpha = 0.7, aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + labs(title="Mapped pathways per type of entity") + xlim(0, 20) + theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
proteoformFrequencies <- read.csv("ReactomeAllProteoformsFrequencies.csv", sep = ",", header = T)
proteinFrequencies <- read.csv("ReactomeAllProteinFrequencies.csv", sep = ",", header = T)
modifiedProteinProteoformFrequencies <- read.csv("ReactomeModifiedProteinProteoformsFrequencies.csv", sep = ",", header = T)
modifiedProteinFrequencies <- read.csv("ReactomeModifiedProteinFrequencies.csv", sep = ",", header = T)
nonEmptyProteoformFrequencies <- read.csv("ReactomeNonEmptyProteoformsFrequencies.csv", sep = ",", header = T)
nonEmptyProteinFrequencies <- read.csv("ReactomeNonEmptyProteinsFrequencies.csv", sep = ",", header = T)
frequencies <- rbind(proteoformFrequencies[,c(1,2,4,5)], proteinFrequencies)
frequencies <- rbind(modifiedProteinFrequencies[,c(1,2,4,5)], frequencies)
frequencies <- rbind(modifiedProteinProteoformFrequencies[,c(1,2,4,5)], frequencies)
frequencies$Type <- as.character(frequencies$Type)
frequencies$Type <- factor(frequencies$Type, levels = c("Proteoform","Protein","Modified Protein Proteoform","Modified Protein"))
fillColors <- c( "#ffeda0","#fc9272", "#a1d99b","#a6bddb")
borderColors <- c("#feb24c","#de2d26","#31a354", "#2b8cbe")
library(ggplot2)
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(alpha = 0.7, aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + labs(title="Mapped pathways per type of entity") + xlim(0, 20) + theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.7, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.8, adjust = 6.25)  +xlim(0,20) + ggtitle("Mapped pathways per entity")+ theme_bw()+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Reactions, fill = Type, colour = Type)) +
geom_density(alpha = 0.7, adjust = 1.5) + ylim(0, 0.4) + xlim(0, 10) + ggtitle("Mapped reactions per entity")+ theme_bw()+ scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Reactions, fill = Type, colour = Type)) +
geom_density(alpha = 0.1, adjust = 1.5) + ylim(0, 0.4) + xlim(0, 10) + ggtitle("Mapped reactions per entity")+ theme_bw()+ scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Reactions, fill = Type, colour = Type)) +
geom_density(alpha = 1.0, adjust = 1.5) + ylim(0, 0.4) + xlim(0, 10) + ggtitle("Mapped reactions per entity")+ theme_bw()+ scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.8, adjust = 6.25)  +xlim(0,20) + theme_bw(base_size = 18)+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.8, adjust = 6.25)  +xlim(0,20) + theme_bw(base_size = 14)+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.8, adjust = 6.25)  +xlim(0,20) + theme_bw(base_size = 14)+ scale_fill_manual(values = fillColors) + scale_color_manual(values= borderColors) + opts(
panel.background = theme_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = theme_blank(),
panel.grid.major = theme_blank(),
plot.background = theme_rect(fill = "transparent",colour = NA)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.8, adjust = 6.25)
g + xlim(0,20) +
g + theme_bw(base_size = 14)
g + scale_fill_manual(values = fillColors)
g + scale_color_manual(values= borderColors)
g + opts(
panel.background = theme_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = theme_blank(),
panel.grid.major = theme_blank(),
plot.background = theme_rect(fill = "transparent",colour = NA)
)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.8, adjust = 6.25)
g + xlim(0,20) +
g + scale_fill_manual(values = fillColors)
g + scale_color_manual(values= borderColors)
g + theme_bw(
base_size = 14,
panel.background = theme_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = theme_blank(),
panel.grid.major = theme_blank(),
plot.background = theme_rect(fill = "transparent",colour = NA)
)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.8, adjust = 6.25)
g + xlim(0,20) +
g + scale_fill_manual(values = fillColors)
g + scale_color_manual(values= borderColors)
p + theme(
panel.background = element_rect(fill = "transparent") # bg of the panel
, plot.background = element_rect(fill = "transparent") # bg of the plot
, panel.grid.major = element_blank() # get rid of major grid
, panel.grid.minor = element_blank() # get rid of minor grid
, legend.background = element_rect(fill = "transparent") # get rid of legend bg
, legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g + geom_density(alpha = 0.8, adjust = 6.25)
g + xlim(0,20) +
g + scale_fill_manual(values = fillColors)
g + scale_color_manual(values= borderColors)
g + theme_bw()
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g <- g + geom_density(alpha = 0.8, adjust = 6.25)
g <- g + xlim(0,20) +
g <- g + scale_fill_manual(values = fillColors)
g <- g + scale_color_manual(values= borderColors)
g <- g + theme_bw()
g <- g + theme(
panel.background = element_rect(fill = "transparent") # bg of the panel
, plot.background = element_rect(fill = "transparent") # bg of the plot
, panel.grid.major = element_blank() # get rid of major grid
, panel.grid.minor = element_blank() # get rid of minor grid
, legend.background = element_rect(fill = "transparent") # get rid of legend bg
, legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g <- g + geom_density(alpha = 0.8, adjust = 6.25)
g <- g + xlim(0,20) +
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g <- g + geom_density(alpha = 0.8, adjust = 6.25)
g <- g + xlim(0,20)
g <- ggplot(frequencies, aes(Pathways, fill = Type, colour = Type))
g <- g + geom_density(alpha = 0.8, adjust = 6.25)
ggplot(frequencies, aes(Pathways, fill = Type, colour = Type)) +
geom_density(alpha = 1.0, adjust = 1.5) + ylim(0, 0.4) + xlim(0, 20) + theme_bw()+ scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Pathways, fill = Type, colour = Type)) +
geom_density(alpha = 1.0, adjust = 2.5) + ylim(0, 0.4) + xlim(0, 20) + theme_bw()+ scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Pathways, fill = Type, colour = Type)) +
geom_density(alpha = 1.0, adjust = 3) + ylim(0, 0.4) + xlim(0, 20) + theme_bw()+ scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Pathways, fill = Type, colour = Type)) +
geom_density(alpha = 0.8, adjust = 3) + ylim(0, 0.4) + xlim(0, 20) + theme_bw()+ scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
ggplot(frequencies, aes(Reactions, fill = Type, colour = Type)) +
geom_density(alpha = 0.8, adjust = 1.5) + ylim(0, 0.4) + xlim(0, 10) + theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(alpha = 0.7, aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + xlim(0, 20) + theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(alpha = 0.8, aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + xlim(0, 20) + theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + xlim(0, 20) + theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Reactions)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge") +  # change binwidth
labs(title="Mapped reactions per type of entity") + xlim(0, 10)+ theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Reactions)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge") + xlim(0, 10)+ theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
p <- ggplot(frequencies, aes(Type, Pathways))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 20) + theme_bw() + scale_fill_manual(values=borderColors)
p <- ggplot(frequencies, aes(Type, Reactions))
p + geom_violin(aes(fill = Type), adjust = 0.7) + ylim(0, 30) + theme_bw() + scale_fill_manual(values=borderColors)
p <- ggplot(frequencies, aes(Type, Reactions))
p + geom_violin(aes(fill = Type), adjust = 0.7) + ylim(0, 30) + theme_bw(fill) + scale_fill_manual(values=borderColors) + panel.background = element_rect(fill = '#f2edea')
p <- ggplot(frequencies, aes(Type, Reactions))
p + geom_violin(aes(fill = Type), adjust = 0.7) + ylim(0, 30) + theme_bw(panel.background = element_rect(fill = '#f2edea')) + scale_fill_manual(values=borderColors)
p <- ggplot(frequencies, aes(Type, Reactions))
p + geom_violin(aes(fill = Type), adjust = 0.7) + ylim(0, 30) + theme_bw(panel.background = element_rect(fill = "#f2edea", colour = "#f2edea")) + scale_fill_manual(values=borderColors)
p <- ggplot(frequencies, aes(Type, Reactions))
p + geom_violin(aes(fill = Type), adjust = 0.7) + ylim(0, 30) + theme_bw() + scale_fill_manual(values=borderColors)
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + xlim(0, 20) + theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + xlim(0, 15) + theme_bw() + scale_fill_manual(values = borderColors) + scale_color_manual(values= borderColors)
p <- ggplot(frequencies, aes(Type, Pathways))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 20) + theme_bw() + scale_fill_manual(values=borderColors)
p <- ggplot(frequencies, aes(Type, Pathways))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 20) + theme_bw() + scale_fill_manual(values=borderColors) + theme(plot.background = element_rect(fill = "green"))
p <- ggplot(frequencies, aes(Type, Pathways))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 20) + theme_bw() + scale_fill_manual(values=borderColors) + theme(plot.background = element_rect(fill = "#de2d26"))
p <- ggplot(frequencies, aes(Type, Pathways))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 20) + theme_bw() + scale_fill_manual(values=borderColors) + theme(plot.background = element_rect(fill = "#f2edea"))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 20) + theme_bw() + scale_fill_manual(values=borderColors) + theme(plot.background = element_rect(fill = "#f2edea"), panel.background = element_rect(fill = "black", colour = "grey50"))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 20) + theme_bw() + scale_fill_manual(values=borderColors) + theme(plot.background = element_rect(fill = "#f2edea"), panel.background = element_rect(fill = "#f2edea", colour = "grey50"))
p <- ggplot(frequencies, aes(Type, Pathways))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 20) + theme_bw() + scale_fill_manual(values=borderColors) + theme(plot.background = element_rect(fill = "#f2edea"), panel.background = element_rect(fill = "#f2edea", colour = "darkgrey"))
p <- ggplot(frequencies, aes(Type, Pathways))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 20) + theme_bw() + scale_fill_manual(values=borderColors) + theme(plot.background = element_rect(fill = "#f2edea"), panel.background = element_rect(fill = "#f2edea", colour = "darkgrey"), legend.background = element_rect(fill = "#f2edea", colour = "darkgrey"))
p <- ggplot(frequencies, aes(Type, Pathways))
p + geom_violin(aes(fill = Type), adjust = 1) + ylim(0, 20) + theme_bw() + scale_fill_manual(values=borderColors) + theme(plot.background = element_rect(fill = "#f2edea"), panel.background = element_rect(fill = "#f2edea", colour = "darkgrey"), legend.background = element_rect(fill = "#f2edea", colour = "#f2edea"))
p <- ggplot(frequencies, aes(Type, Reactions))
p + geom_violin(aes(fill = Type), adjust = 0.7) + ylim(0, 30) + theme_bw() +
scale_fill_manual(values=borderColors) +
scale_fill_manual(values=borderColors) +
theme(plot.background = element_rect(fill = "#f2edea"), panel.background = element_rect(fill = "#f2edea", colour = "darkgrey"), legend.background = element_rect(fill = "#f2edea", colour = "#f2edea"))
g <- ggplot(frequencies, aes(Reactions)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge") + xlim(0, 10)+
theme_bw() +
scale_fill_manual(values=borderColors) +
scale_fill_manual(values=borderColors) +
theme(plot.background = element_rect(fill = "#f2edea"),
panel.background = element_rect(fill = "#f2edea", colour = "darkgrey"),
legend.background = element_rect(fill = "#f2edea", colour = "#f2edea"))
g <- ggplot(frequencies, aes(Pathways)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge"
) + xlim(0, 20) +
theme_bw() +
scale_fill_manual(values=borderColors) +
scale_fill_manual(values=borderColors) +
theme(plot.background = element_rect(fill = "#f2edea"),
panel.background = element_rect(fill = "#f2edea", colour = "darkgrey"),
legend.background = element_rect(fill = "#f2edea", colour = "#f2edea"))
g <- ggplot(frequencies, aes(Reactions)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge") + xlim(0, 10)+
theme_bw() +
scale_fill_manual(values=borderColors) +
scale_fill_manual(values=borderColors) +
theme(plot.background = element_rect(fill = "#f2edea"),
panel.background = element_rect(fill = "#f2edea", colour = "darkgrey"),
legend.position="none")
g <- ggplot(frequencies, aes(Reactions)) + scale_fill_brewer(palette = "Spectral")
g + geom_histogram(aes(fill=Type),
binwidth = 1,
col="black",
size=.1,
position = "dodge") + xlim(0, 30)+
theme_bw() +
scale_fill_manual(values=borderColors) +
scale_fill_manual(values=borderColors) +
theme(plot.background = element_rect(fill = "#f2edea"),
panel.background = element_rect(fill = "#f2edea", colour = "darkgrey"),
legend.position="none")
snpFrequencies <- read.csv("snpFrequencies.csv", sep = ";", header = F)
View(snpFrequencies)
setwd("~/phd/Projects/PathwayMatcher/docs/plots")
library(ggplot2)
require(cowplot)
library(stats)
source("loadData.R")
library(ggplot2)
require(cowplot)
library(stats)
source("loadData.R")
t <- load.data(averageSdByType = F)
yMax <- 4
yMin <- 0
ribbonAlpha <- 0.25
plot.snps <- ggplot(t[which(t$Type == "rsidList"),], aes(x = Size)) +
geom_ribbon(aes(ymin = Low, ymax = High), fill = "#de2d26", alpha = ribbonAlpha) +
geom_line(aes(y = Mean), color = "#de2d26", size = 1) +
theme_bw() + ylab("Time [min]") + xlab("# SNPs") +
scale_x_continuous(breaks=c(600000,1200000,1800000)) + scale_y_continuous(limits = c(yMin, yMax))
plot.snps
plot.proteins <- ggplot(t[which(t$Type == "uniprotList"),], aes(x = Size)) +
geom_ribbon(aes(ymin = Low, ymax = High), fill = "#2b8cbe", alpha = ribbonAlpha) +
geom_line( aes(y = Mean), color = "#2b8cbe", size = 1) +
theme_bw() + ylab("Time [min]") + xlab("# Proteins") +
scale_y_continuous(limits = c(yMin, yMax))
plot.proteins
plot.peptides <- ggplot(t[which(t$Type == "peptideList"),], aes(x = Size)) +
geom_ribbon(aes(ymin = Low, ymax = High), fill = "#feb24c", alpha = ribbonAlpha) +
geom_line(aes(y = Mean), color = "#feb24c", size = 1) +
theme_bw() + ylab("Time [min]") + xlab("# Peptides") +
scale_y_continuous(limits = c(yMin, yMax))
plot.peptides
plot.proteoforms <- ggplot(t[which(t$Type == "uniprotListAndModSites"),], aes(x = Size)) +
geom_ribbon(aes(ymin = Low, ymax = High), fill = "#31a354", alpha = ribbonAlpha) +
geom_line(aes(y = Mean), color = "#31a354", size = 1) +
theme_bw() + ylab("Time [min]") + xlab("# Proteoforms") +
scale_y_continuous(limits = c(yMin, yMax))
plot.proteoforms
plot_grid(
plot.snps,
plot.proteins,
plot.peptides,
plot.proteoforms,
labels = c("A", "B", "C", "D"))
plot.all <- ggplot(t[which(t$Type != "rsidList"),], aes(x = Size, group = Type, colour=Type)) +
geom_ribbon(aes(ymin = Low, ymax = High), alpha = 0.1) +
geom_line(aes(y = Mean), size = 1) +
theme_bw() + ylab("Time [s]") + xlab("Sample Size") +
scale_y_continuous(limits = c(yMin, yMax))
plot.all
plot.proteins
plot.peptides <- ggplot(t[which(t$Type == "peptideList"),], aes(x = Size)) +
geom_ribbon(aes(ymin = Low, ymax = High), fill = "#feb24c", alpha = ribbonAlpha) +
geom_line(aes(y = Mean), color = "#feb24c", size = 1) +
theme_bw() + ylab("Time [min]") + xlab("# Peptides") +
scale_y_continuous(limits = c(0.5, 1))
plot.peptides
plot.peptides <- ggplot(t[which(t$Type == "peptideList"),], aes(x = Size)) +
geom_ribbon(aes(ymin = Low, ymax = High), fill = "#feb24c", alpha = ribbonAlpha) +
geom_line(aes(y = Mean), color = "#feb24c", size = 1) +
theme_bw() + ylab("Time [min]") + xlab("# Peptides") +
scale_y_continuous(limits = c(yMin, yMax))
plot.peptides
plot.proteins <- ggplot(t[which(t$Type == "uniprotList"),], aes(x = Size)) +
geom_ribbon(aes(ymin = Low, ymax = High), fill = "#2b8cbe", alpha = ribbonAlpha) +
geom_line( aes(y = Mean), color = "#2b8cbe", size = 1) +
theme_bw() + ylab("Time [min]") + xlab("# Proteins") +
scale_y_continuous(limits = c(0.5, 1))
plot.proteins
plot.proteins <- ggplot(t[which(t$Type == "uniprotList"),], aes(x = Size)) +
geom_ribbon(aes(ymin = Low, ymax = High), fill = "#2b8cbe", alpha = ribbonAlpha) +
geom_line( aes(y = Mean), color = "#2b8cbe", size = 1) +
theme_bw() + ylab("Time [min]") + xlab("# Proteins") +
scale_y_continuous(limits = c(0.6, 0.65))
plot.proteins
